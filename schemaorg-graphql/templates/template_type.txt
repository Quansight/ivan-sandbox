const {
  GraphQLObjectType,
  GraphQLList,
  GraphQLString,
  GraphQLBoolean,
  GraphQLInt,
  GraphQLFloat,
  GraphQLUnionType
} = require('graphql');

const { 
{% for enum_name, enum_def in enum_defs.items() %}  {{ enum_def['rdfs:label'] }}Enum, 
{% endfor %}
} = require('./schemaorg-enum');

{% for typename, fields in type_defs.items() %}
const {{ typename }} = new GraphQLObjectType({
  name: '{{ typename }}',
  fields: () => ({
{% for field_name, field_types in fields.items() %}
    {% 
      if field_name == 'identifier' 
    %}{{ field_name }}: { type: {{ field_types|safe }} },{%
      else
    %}{{ field_name }}: { type: GraphQLList({{ field_types|safe }}) },{% endif %}
{% endfor %}
  })
});
{% endfor %}

{% for typename, join_types in union_types.items() %}
const {{ typename }} = new GraphQLUnionType({
  name: '{{ typename }}',
  types: [].concat(
    {% for t in join_types %}{{ t }},
    {% endfor %}
  ),
  resolveType(value) {
    return value.__typename;
  }
});
{% endfor %}

module.exports = {
  {% for typename, fields in type_defs.items() %}{{ typename }},
  {% endfor %}
};